{"ast":null,"code":"var _jsxFileName = \"/Users/gyul/git/copy/coppy/grip-movie-app/src/pages/movies/search.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useRecoilState, useResetRecoilState } from 'recoil';\nimport { inputValueState, pageState, searchResultState } from 'states/movie';\nimport Button from 'components/button';\nimport { SearchIcon } from 'assets/svgs';\nimport styles from './movies.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieSearch = () => {\n  _s();\n\n  var _searchParams$get;\n\n  const [searchParams] = useSearchParams();\n  const [keyword, setKeyword] = useState((_searchParams$get = searchParams.get('s')) !== null && _searchParams$get !== void 0 ? _searchParams$get : '');\n  const [inputValue, setInputValue] = useRecoilState(inputValueState);\n  const resetPage = useResetRecoilState(pageState);\n  const resetMovies = useResetRecoilState(searchResultState);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!inputValue.trim() || inputValue === keyword) return;\n    resetMovies();\n    resetPage();\n    setKeyword(inputValue);\n  };\n\n  const handleInputChange = e => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.searchForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputWrapper,\n      children: [/*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"\\uC601\\uD654 \\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      value: \"\\uAC80\\uC0C9\",\n      type: \"submit\",\n      buttonStyle: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieSearch, \"cDWlQvKoPEJu2ANH8qX9dW40Smk=\", false, function () {\n  return [useSearchParams, useRecoilState, useResetRecoilState, useResetRecoilState];\n});\n\n_c = MovieSearch;\nexport default MovieSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["useState","useSearchParams","useRecoilState","useResetRecoilState","inputValueState","pageState","searchResultState","Button","SearchIcon","styles","MovieSearch","searchParams","keyword","setKeyword","get","inputValue","setInputValue","resetPage","resetMovies","handleSubmit","e","preventDefault","trim","handleInputChange","currentTarget","value","searchForm","inputWrapper"],"sources":["/Users/gyul/git/copy/coppy/grip-movie-app/src/pages/movies/search.tsx"],"sourcesContent":["import { useState, ChangeEvent, FormEvent } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport { useRecoilState, useResetRecoilState } from 'recoil'\nimport { inputValueState, keywordState, pageState, searchResultState } from 'states/movie'\n\nimport Button from 'components/button'\nimport { SearchIcon } from 'assets/svgs'\nimport styles from './movies.module.scss'\n\nconst MovieSearch = () => {\n  const [searchParams] = useSearchParams()\n  const [keyword, setKeyword] = useState(searchParams.get('s') ?? '')\n\n  const [inputValue, setInputValue] = useRecoilState(inputValueState)\n  \n  const resetPage = useResetRecoilState(pageState)\n  const resetMovies = useResetRecoilState(searchResultState)\n\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    if (!inputValue.trim() || inputValue === keyword) return\n\n    resetMovies()\n    resetPage()\n    setKeyword(inputValue)\n  }\n  \n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.currentTarget.value)\n  }\n\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.searchForm}>\n      <div className={styles.inputWrapper}>\n        <SearchIcon />\n        <input type='text' value={inputValue} onChange={handleInputChange} placeholder='영화 제목을 입력하세요.' />\n      </div>\n      <Button value='검색' type='submit' buttonStyle='primary' />\n    </form>\n  )\n}\n\nexport default MovieSearch\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAiD,OAAjD;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,cAAT,EAAyBC,mBAAzB,QAAoD,QAApD;AACA,SAASC,eAAT,EAAwCC,SAAxC,EAAmDC,iBAAnD,QAA4E,cAA5E;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAAA;;EACxB,MAAM,CAACC,YAAD,IAAiBV,eAAe,EAAtC;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,sBAACW,YAAY,CAACG,GAAb,CAAiB,GAAjB,CAAD,iEAA0B,EAA1B,CAAtC;EAEA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,cAAc,CAACE,eAAD,CAAlD;EAEA,MAAMa,SAAS,GAAGd,mBAAmB,CAACE,SAAD,CAArC;EACA,MAAMa,WAAW,GAAGf,mBAAmB,CAACG,iBAAD,CAAvC;;EAGA,MAAMa,YAAY,GAAIC,CAAD,IAAmC;IACtDA,CAAC,CAACC,cAAF;IACA,IAAI,CAACN,UAAU,CAACO,IAAX,EAAD,IAAsBP,UAAU,KAAKH,OAAzC,EAAkD;IAElDM,WAAW;IACXD,SAAS;IACTJ,UAAU,CAACE,UAAD,CAAV;EACD,CAPD;;EASA,MAAMQ,iBAAiB,GAAIH,CAAD,IAAsC;IAC9DJ,aAAa,CAACI,CAAC,CAACI,aAAF,CAAgBC,KAAjB,CAAb;EACD,CAFD;;EAKA,oBACE;IAAM,QAAQ,EAAEN,YAAhB;IAA8B,SAAS,EAAEV,MAAM,CAACiB,UAAhD;IAAA,wBACE;MAAK,SAAS,EAAEjB,MAAM,CAACkB,YAAvB;MAAA,wBACE,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAEZ,UAA1B;QAAsC,QAAQ,EAAEQ,iBAAhD;QAAmE,WAAW,EAAC;MAA/E;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,MAAD;MAAQ,KAAK,EAAC,cAAd;MAAmB,IAAI,EAAC,QAAxB;MAAiC,WAAW,EAAC;IAA7C;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAjCD;;GAAMb,W;UACmBT,e,EAGaC,c,EAElBC,mB,EACEA,mB;;;KAPhBO,W;AAmCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}