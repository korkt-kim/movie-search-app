{"ast":null,"code":"var _jsxFileName = \"/Users/gyul/git/copy/coppy/grip-movie-app/src/routes/movies/item.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { favoriteMovieState, selectedMovieState } from 'states/movie';\nimport cx from 'classnames';\nimport { HeartIcon } from 'assets/svgs';\nimport styles from './movies.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieItem = _ref => {\n  _s();\n\n  let {\n    movie\n  } = _ref;\n  const {\n    Poster,\n    Title,\n    Year,\n    Type\n  } = movie;\n  const setSelectedMovie = useSetRecoilState(selectedMovieState);\n  const [favoriteMovies, setFavoriteMovies] = useRecoilState(favoriteMovieState);\n  const selectedMovie = useRecoilValue(selectedMovieState);\n  const [isClicked, setIsClicked] = useState(false);\n  const isFavorite = favoriteMovies.includes(selectedMovie);\n\n  const handleOpen = () => {\n    setIsClicked(true);\n    setSelectedMovie(movie);\n  };\n\n  const handleClose = () => {\n    setIsClicked(false);\n  };\n\n  const handleFavorite = () => {\n    if (isFavorite) {\n      setFavoriteMovies(prev => prev.filter(item => item.imdbID !== selectedMovie.imdbID));\n    } else {\n      setFavoriteMovies(prev => [...prev, selectedMovie]);\n    }\n\n    setIsClicked(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.searchResultWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.searchResult,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Poster,\n        alt: \"Sorry Poster\",\n        \"aria-label\": \"There is no Poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.searchResultInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [Year, \", \", Type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeartIcon, {\n          type: \"button\",\n          className: cx(styles.favoriteState, {\n            [styles.checkFavorite]: isFavorite\n          }),\n          onClick: handleOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieItem, \"bhOS3m7Fn5J1s7InXDbl4IR3X68=\", false, function () {\n  return [useSetRecoilState, useRecoilState, useRecoilValue];\n});\n\n_c = MovieItem;\nexport default MovieItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieItem\");","map":{"version":3,"names":["useState","useRecoilState","useRecoilValue","useSetRecoilState","favoriteMovieState","selectedMovieState","cx","HeartIcon","styles","MovieItem","movie","Poster","Title","Year","Type","setSelectedMovie","favoriteMovies","setFavoriteMovies","selectedMovie","isClicked","setIsClicked","isFavorite","includes","handleOpen","handleClose","handleFavorite","prev","filter","item","imdbID","searchResultWrapper","searchResult","searchResultInfo","favoriteState","checkFavorite"],"sources":["/Users/gyul/git/copy/coppy/grip-movie-app/src/routes/movies/item.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport { favoriteMovieState, selectedMovieState, modalOpenState } from 'states/movie'\nimport { IMovie } from 'types/movie'\n\nimport cx from 'classnames'\nimport { HeartIcon, CancelIcon } from 'assets/svgs'\nimport styles from './movies.module.scss'\n\ninterface MovieItemProps {\n  movie: IMovie\n}\n\nconst MovieItem = ({ movie }: MovieItemProps) => {\n  const { Poster, Title, Year, Type } = movie\n  const setSelectedMovie = useSetRecoilState(selectedMovieState)\n\n  const [favoriteMovies, setFavoriteMovies] = useRecoilState(favoriteMovieState)\n  const selectedMovie = useRecoilValue(selectedMovieState)\n  const [isClicked, setIsClicked] = useState(false)\n\n  const isFavorite = favoriteMovies.includes(selectedMovie)\n\n  const handleOpen = () => {\n    setIsClicked(true)\n    setSelectedMovie(movie)\n  }\n  const handleClose = () => {\n    setIsClicked(false)\n  }\n\n  const handleFavorite = () => {\n    if (isFavorite) {\n      setFavoriteMovies((prev) => prev.filter((item) => item.imdbID !== selectedMovie.imdbID))\n    } else {\n      setFavoriteMovies((prev) => [...prev, selectedMovie])\n    }\n    setIsClicked(false)\n  }\n\n  return (\n    <li className={styles.searchResultWrapper}>\n      <div className={styles.searchResult}>\n        <img src={Poster} alt='Sorry Poster' aria-label='There is no Poster' />\n        <div className={styles.searchResultInfo}>\n          <p>{Title}</p>\n          <p>\n            {Year}, {Type}\n          </p>\n          <HeartIcon\n            type='button'\n            className={cx(styles.favoriteState, { [styles.checkFavorite]: isFavorite })}\n            onClick={handleOpen}\n          />\n       \n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default MovieItem\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,iBAAzC,QAAkE,QAAlE;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuE,cAAvE;AAGA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,SAAT,QAAsC,aAAtC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAMA,MAAMC,SAAS,GAAG,QAA+B;EAAA;;EAAA,IAA9B;IAAEC;EAAF,CAA8B;EAC/C,MAAM;IAAEC,MAAF;IAAUC,KAAV;IAAiBC,IAAjB;IAAuBC;EAAvB,IAAgCJ,KAAtC;EACA,MAAMK,gBAAgB,GAAGZ,iBAAiB,CAACE,kBAAD,CAA1C;EAEA,MAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsChB,cAAc,CAACG,kBAAD,CAA1D;EACA,MAAMc,aAAa,GAAGhB,cAAc,CAACG,kBAAD,CAApC;EACA,MAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,KAAD,CAA1C;EAEA,MAAMqB,UAAU,GAAGL,cAAc,CAACM,QAAf,CAAwBJ,aAAxB,CAAnB;;EAEA,MAAMK,UAAU,GAAG,MAAM;IACvBH,YAAY,CAAC,IAAD,CAAZ;IACAL,gBAAgB,CAACL,KAAD,CAAhB;EACD,CAHD;;EAIA,MAAMc,WAAW,GAAG,MAAM;IACxBJ,YAAY,CAAC,KAAD,CAAZ;EACD,CAFD;;EAIA,MAAMK,cAAc,GAAG,MAAM;IAC3B,IAAIJ,UAAJ,EAAgB;MACdJ,iBAAiB,CAAES,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBX,aAAa,CAACW,MAApD,CAAX,CAAjB;IACD,CAFD,MAEO;MACLZ,iBAAiB,CAAES,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUR,aAAV,CAAX,CAAjB;IACD;;IACDE,YAAY,CAAC,KAAD,CAAZ;EACD,CAPD;;EASA,oBACE;IAAI,SAAS,EAAEZ,MAAM,CAACsB,mBAAtB;IAAA,uBACE;MAAK,SAAS,EAAEtB,MAAM,CAACuB,YAAvB;MAAA,wBACE;QAAK,GAAG,EAAEpB,MAAV;QAAkB,GAAG,EAAC,cAAtB;QAAqC,cAAW;MAAhD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAEH,MAAM,CAACwB,gBAAvB;QAAA,wBACE;UAAA,UAAIpB;QAAJ;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,WACGC,IADH,QACWC,IADX;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAKE,QAAC,SAAD;UACE,IAAI,EAAC,QADP;UAEE,SAAS,EAAER,EAAE,CAACE,MAAM,CAACyB,aAAR,EAAuB;YAAE,CAACzB,MAAM,CAAC0B,aAAR,GAAwBb;UAA1B,CAAvB,CAFf;UAGE,OAAO,EAAEE;QAHX;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CA9CD;;GAAMd,S;UAEqBN,iB,EAEmBF,c,EACtBC,c;;;KALlBO,S;AAgDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}