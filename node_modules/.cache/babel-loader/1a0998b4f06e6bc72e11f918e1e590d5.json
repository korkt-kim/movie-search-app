{"ast":null,"code":"var _jsxFileName = \"/Users/gyul/git/copy/coppy/grip-movie-app/src/routes/movies/item.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { favoriteMovieState, selectedMovieState, modalOpenState } from 'states/movie';\nimport { HeartBorderIcon, HeartFillIcon } from 'assets/svgs';\nimport NoImage from 'assets/images/no_image.png';\nimport styles from './movies.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieItem = _ref => {\n  _s();\n\n  let {\n    movie\n  } = _ref;\n  const {\n    Poster,\n    Title,\n    Year,\n    Type\n  } = movie;\n  const setSelectedMovie = useSetRecoilState(selectedMovieState);\n  const [favoriteMovies, setFavoriteMovies] = useRecoilState(favoriteMovieState);\n  const selectedMovie = useRecoilValue(selectedMovieState);\n  const [isModalOpen, setIsModalOpen] = useRecoilState(modalOpenState);\n  const isFavorite = favoriteMovies.includes(selectedMovie);\n\n  const handleMovieClick = () => {\n    setIsModalOpen(true);\n    setSelectedMovie(movie);\n  };\n\n  const toggleFavorite = () => {\n    if (isFavorite) {\n      setFavoriteMovies(prev => prev.filter(item => item.imdbID !== selectedMovie.imdbID));\n    } else {\n      setFavoriteMovies(prev => [...prev, selectedMovie]);\n    }\n\n    setIsModalOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.movieWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleMovieClick,\n      className: styles.movieItem,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.movieInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Poster === 'N/A' ? NoImage : Poster,\n          alt: \"poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.movieInfoText,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: favoriteMovies.includes(movie) ? /*#__PURE__*/_jsxDEV(HeartFillIcon, {\n          className: styles.liked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 48\n        }, this) : /*#__PURE__*/_jsxDEV(HeartBorderIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 93\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieItem, \"ccy09MUq7jezxqlo9YY9dJ6FqgQ=\", false, function () {\n  return [useSetRecoilState, useRecoilState, useRecoilValue, useRecoilState];\n});\n\n_c = MovieItem;\nexport default MovieItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieItem\");","map":{"version":3,"names":["useRecoilState","useRecoilValue","useSetRecoilState","favoriteMovieState","selectedMovieState","modalOpenState","HeartBorderIcon","HeartFillIcon","NoImage","styles","MovieItem","movie","Poster","Title","Year","Type","setSelectedMovie","favoriteMovies","setFavoriteMovies","selectedMovie","isModalOpen","setIsModalOpen","isFavorite","includes","handleMovieClick","toggleFavorite","prev","filter","item","imdbID","movieWrapper","movieItem","movieInfo","movieInfoText","liked"],"sources":["/Users/gyul/git/copy/coppy/grip-movie-app/src/routes/movies/item.tsx"],"sourcesContent":["import { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport { favoriteMovieState, selectedMovieState, modalOpenState } from 'states/movie'\nimport { IMovie } from 'types/movie'\n\nimport { HeartBorderIcon, HeartFillIcon } from 'assets/svgs'\nimport NoImage from 'assets/images/no_image.png'\nimport styles from './movies.module.scss'\n\ninterface MovieItemProps {\n  movie: IMovie\n}\n\nconst MovieItem = ({ movie }: MovieItemProps) => {\n  const { Poster, Title, Year, Type } = movie\n  const setSelectedMovie = useSetRecoilState(selectedMovieState)\n\n  const [favoriteMovies, setFavoriteMovies] = useRecoilState(favoriteMovieState)\n  const selectedMovie = useRecoilValue(selectedMovieState)\n  const [isModalOpen, setIsModalOpen] = useRecoilState(modalOpenState)\n\n  const isFavorite = favoriteMovies.includes(selectedMovie)\n\n  const handleMovieClick = () => {\n    setIsModalOpen(true)\n    setSelectedMovie(movie)\n  }\n\n  const toggleFavorite = () => {\n    if (isFavorite) {\n      setFavoriteMovies((prev) => prev.filter((item) => item.imdbID !== selectedMovie.imdbID))\n    } else {\n      setFavoriteMovies((prev) => [...prev, selectedMovie])\n    }\n    setIsModalOpen(false)\n  }\n\n  return (\n    <li className={styles.movieWrapper}>\n      <button type='button' onClick={handleMovieClick} className={styles.movieItem}>\n        <div className={styles.movieInfo}>\n          <img src={Poster === 'N/A' ? NoImage : Poster} alt='poster' />\n          <div className={styles.movieInfoText}>\n            <h3>{Title}</h3>\n            <div>{Year}</div>\n            <div>{Type}</div>\n          </div>\n        </div>\n        <div>{favoriteMovies.includes(movie) ? <HeartFillIcon className={styles.liked} /> : <HeartBorderIcon />}</div>\n      </button>\n    </li>\n  )\n}\n\nexport default MovieItem\n"],"mappings":";;;AAAA,SAASA,cAAT,EAAyBC,cAAzB,EAAyCC,iBAAzC,QAAkE,QAAlE;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,cAAjD,QAAuE,cAAvE;AAGA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,aAA/C;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAMA,MAAMC,SAAS,GAAG,QAA+B;EAAA;;EAAA,IAA9B;IAAEC;EAAF,CAA8B;EAC/C,MAAM;IAAEC,MAAF;IAAUC,KAAV;IAAiBC,IAAjB;IAAuBC;EAAvB,IAAgCJ,KAAtC;EACA,MAAMK,gBAAgB,GAAGd,iBAAiB,CAACE,kBAAD,CAA1C;EAEA,MAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsClB,cAAc,CAACG,kBAAD,CAA1D;EACA,MAAMgB,aAAa,GAAGlB,cAAc,CAACG,kBAAD,CAApC;EACA,MAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCrB,cAAc,CAACK,cAAD,CAApD;EAEA,MAAMiB,UAAU,GAAGL,cAAc,CAACM,QAAf,CAAwBJ,aAAxB,CAAnB;;EAEA,MAAMK,gBAAgB,GAAG,MAAM;IAC7BH,cAAc,CAAC,IAAD,CAAd;IACAL,gBAAgB,CAACL,KAAD,CAAhB;EACD,CAHD;;EAKA,MAAMc,cAAc,GAAG,MAAM;IAC3B,IAAIH,UAAJ,EAAgB;MACdJ,iBAAiB,CAAEQ,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBV,aAAa,CAACU,MAApD,CAAX,CAAjB;IACD,CAFD,MAEO;MACLX,iBAAiB,CAAEQ,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUP,aAAV,CAAX,CAAjB;IACD;;IACDE,cAAc,CAAC,KAAD,CAAd;EACD,CAPD;;EASA,oBACE;IAAI,SAAS,EAAEZ,MAAM,CAACqB,YAAtB;IAAA,uBACE;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAEN,gBAA/B;MAAiD,SAAS,EAAEf,MAAM,CAACsB,SAAnE;MAAA,wBACE;QAAK,SAAS,EAAEtB,MAAM,CAACuB,SAAvB;QAAA,wBACE;UAAK,GAAG,EAAEpB,MAAM,KAAK,KAAX,GAAmBJ,OAAnB,GAA6BI,MAAvC;UAA+C,GAAG,EAAC;QAAnD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,SAAS,EAAEH,MAAM,CAACwB,aAAvB;UAAA,wBACE;YAAA,UAAKpB;UAAL;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,UAAMC;UAAN;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA,UAAMC;UAAN;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eASE;QAAA,UAAME,cAAc,CAACM,QAAf,CAAwBZ,KAAxB,iBAAiC,QAAC,aAAD;UAAe,SAAS,EAAEF,MAAM,CAACyB;QAAjC;UAAA;UAAA;UAAA;QAAA,QAAjC,gBAA8E,QAAC,eAAD;UAAA;UAAA;UAAA;QAAA;MAApF;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAvCD;;GAAMxB,S;UAEqBR,iB,EAEmBF,c,EACtBC,c,EACgBD,c;;;KANlCU,S;AAyCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}