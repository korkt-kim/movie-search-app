{"ast":null,"code":"var _jsxFileName = \"/Users/gyul/git/movie-search-app/src/components/searchResult/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { favoriteMovieState, selectedMovieState } from 'states/movie';\nimport store from 'storejs';\nimport cx from 'classnames';\nimport { HeartIcon, CancelIcon } from 'assets/svgs';\nimport styles from './searchResult.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResult = _ref => {\n  _s();\n\n  let {\n    movie\n  } = _ref;\n  const {\n    Poster,\n    Title,\n    imdbID,\n    Year,\n    Type\n  } = movie;\n  const setSelectedMovie = useSetRecoilState(selectedMovieState);\n  /* const [favoriteMovies, setFavoriteMovies] = useRecoilState(favoriteMovieState)\n   */\n\n  const selectedMovie = useRecoilValue(selectedMovieState);\n  const [isClicked, setIsClicked] = useState(false);\n  const [favoriteMovies, setfavoriteMovies] = useRecoilState(favoriteMovieState);\n\n  const setLocalStorage = (key, value) => {\n    store.set(key, value);\n  };\n\n  const getLocalStorage = key => {\n    return store.get(key);\n  };\n\n  const isFavorite = favoriteMovies.find(item => item.imdbID === imdbID);\n  /*  const isFavorite = favoriteMovies.includes(selectedMovie) */\n\n  const handleOpen = () => {\n    setIsClicked(true);\n    setSelectedMovie(movie);\n  };\n\n  const handleClose = () => {\n    setIsClicked(false);\n  };\n\n  const addMovie = () => {\n    const newFavorites = isFavorite ? favoriteMovies : [...favoriteMovies, movie];\n    setfavoriteMovies(newFavorites);\n    setLocalStorage('favoriteMovies', newFavorites);\n  };\n\n  const deleteMovie = () => {\n    const newFavorites = favoriteMovies.filter(item => item.imdbID !== imdbID);\n    setfavoriteMovies(newFavorites);\n    setLocalStorage('favoriteMovies', newFavorites);\n  };\n  /*   const handleFavorite = () => {\n      if (isFavorite()) {\n        setFavoriteMovies((prev) => prev.filter((item) => item.imdbID !== selectedMovie.imdbID))\n      } else {\n        setFavoriteMovies((prev) => [...prev, selectedMovie])\n      }\n      setIsClicked(false)\n    } */\n\n\n  const handleFavorite = e => {\n    const {\n      name\n    } = e.currentTarget;\n\n    if (isFavorite) {\n      addMovie();\n    } else {\n      deleteMovie();\n    }\n\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.searchResultWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.searchResult,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Poster,\n        alt: \"Sorry Poster\",\n        \"aria-label\": \"There is no Poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"dl\", {\n        className: styles.searchResultInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n          children: Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"dt\", {\n          children: [Year, \", \", Type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeartIcon, {\n          type: \"button\",\n          className: cx(styles.favoriteState, {\n            [styles.checkFavorite]: isFavorite\n          }),\n          onClick: handleOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx(styles.favoriteMenu, {\n          [styles.openMenu]: isClicked\n        }),\n        children: [!favoriteMovies.includes(movie) ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.addFavoriteToggle,\n          onClick: handleFavorite,\n          children: [/*#__PURE__*/_jsxDEV(HeartIcon, {\n            type: \"button\",\n            className: styles.favoriteSVG\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), \"\\uC990\\uACA8\\uCC3E\\uAE30 \\uCD94\\uAC00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: cx(styles.addFavoriteToggle, {\n            [styles.checkFavorite]: isFavorite\n          }),\n          onClick: handleFavorite,\n          children: [/*#__PURE__*/_jsxDEV(HeartIcon, {\n            type: \"button\",\n            className: cx(styles.favoriteSVG, styles.checkFavorite)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), \"\\uC990\\uACA8\\uCC3E\\uAE30 \\uC81C\\uAC70\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(CancelIcon, {\n            className: styles.closeSVG\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), \" \\uCDE8\\uC18C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchResult, \"WUdMxuu8iK4n0Gt79+zK8SVExPk=\", false, function () {\n  return [useSetRecoilState, useRecoilValue, useRecoilState];\n});\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"names":["useState","useRecoilState","useRecoilValue","useSetRecoilState","favoriteMovieState","selectedMovieState","store","cx","HeartIcon","CancelIcon","styles","SearchResult","movie","Poster","Title","imdbID","Year","Type","setSelectedMovie","selectedMovie","isClicked","setIsClicked","favoriteMovies","setfavoriteMovies","setLocalStorage","key","value","set","getLocalStorage","get","isFavorite","find","item","handleOpen","handleClose","addMovie","newFavorites","deleteMovie","filter","handleFavorite","e","name","currentTarget","searchResultWrapper","searchResult","searchResultInfo","favoriteState","checkFavorite","favoriteMenu","openMenu","includes","addFavoriteToggle","favoriteSVG","closeSVG"],"sources":["/Users/gyul/git/movie-search-app/src/components/searchResult/index.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport { favoriteMovieState, selectedMovieState } from 'states/movie'\nimport { IMovie } from 'types/movie'\n\nimport store from 'storejs'\n\nimport cx from 'classnames'\nimport { HeartIcon, CancelIcon } from 'assets/svgs'\nimport styles from './searchResult.module.scss'\n\ninterface MovieItemProps {\n  movie: IMovie\n}\n\nconst SearchResult = ({ movie }: MovieItemProps) => {\n  const { Poster, Title, imdbID, Year, Type } = movie\n  const setSelectedMovie = useSetRecoilState(selectedMovieState)\n\n  /* const [favoriteMovies, setFavoriteMovies] = useRecoilState(favoriteMovieState)\n   */const selectedMovie = useRecoilValue(selectedMovieState)\n  const [isClicked, setIsClicked] = useState(false)\n\n\n\n  const [favoriteMovies, setfavoriteMovies] = useRecoilState(favoriteMovieState);\n\n\n  const setLocalStorage = (key: string, value: any) => {\n    store.set(key, value)\n  }\n\n  const getLocalStorage = (key: string) => {\n    return store.get(key)\n  }\n\n  const isFavorite = favoriteMovies.find((item: IMovie) => item.imdbID === imdbID)\n\n\n  /*  const isFavorite = favoriteMovies.includes(selectedMovie) */\n  const handleOpen = () => {\n    setIsClicked(true)\n    setSelectedMovie(movie)\n  }\n  const handleClose = () => {\n    setIsClicked(false)\n  }\n  const addMovie = () => {\n    const newFavorites = isFavorite ? favoriteMovies : [...favoriteMovies, movie];\n\n    setfavoriteMovies(newFavorites);\n    setLocalStorage('favoriteMovies', newFavorites);\n  };\n\n  const deleteMovie = () => {\n    const newFavorites = favoriteMovies.filter((item) => item.imdbID !== imdbID);\n\n    setfavoriteMovies(newFavorites);\n    setLocalStorage('favoriteMovies', newFavorites);\n  };\n\n/*   const handleFavorite = () => {\n    if (isFavorite()) {\n      setFavoriteMovies((prev) => prev.filter((item) => item.imdbID !== selectedMovie.imdbID))\n    } else {\n      setFavoriteMovies((prev) => [...prev, selectedMovie])\n    }\n    setIsClicked(false)\n  } */\n\n  const handleFavorite = (e: { currentTarget: { name: string } }) => {\n    const { name } = e.currentTarget;\n\n    if(isFavorite){\n      addMovie()\n    }\n    else{\n      deleteMovie()\n    }\n\n    handleClose()\n  };\n\n  return (\n    <li className={styles.searchResultWrapper}>\n      <div className={styles.searchResult}>\n        <img src={Poster} alt='Sorry Poster' aria-label='There is no Poster' />\n        <dl className={styles.searchResultInfo}>\n          <dt>{Title}</dt>\n          <dt>\n            {Year}, {Type}\n          </dt>\n          <HeartIcon\n            type='button'\n            className={cx(styles.favoriteState, { [styles.checkFavorite]: isFavorite })}\n            onClick={handleOpen}\n          />\n        </dl>\n        <div className={cx(styles.favoriteMenu, { [styles.openMenu]: isClicked })}>\n          {!favoriteMovies.includes(movie) ? (\n            <button type='button' className={styles.addFavoriteToggle} onClick={handleFavorite}>\n              <HeartIcon type='button' className={styles.favoriteSVG} />\n              즐겨찾기 추가\n            </button>\n          ) : (\n            <button\n              type='button'\n              className={cx(styles.addFavoriteToggle, { [styles.checkFavorite]: isFavorite })}\n              onClick={handleFavorite}\n            >\n              <HeartIcon type='button' className={cx(styles.favoriteSVG, styles.checkFavorite)} />\n              즐겨찾기 제거\n            </button>\n          )}\n          <button type='button' onClick={handleClose}>\n            <CancelIcon className={styles.closeSVG} /> 취소\n          </button>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default SearchResult\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}