{"ast":null,"code":"var _jsxFileName = \"/Users/gyul/git/movie-search-app/src/components/searchResult/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { favoriteMovieState, selectedMovieState } from 'states/movie';\nimport ModalPortal from '../modal/modalPortal';\nimport { MovieModal } from '../modal';\nimport store from 'storejs';\nimport cx from 'classnames';\nimport { HeartIcon } from 'assets/svgs';\nimport styles from './searchResult.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResult = _ref => {\n  _s();\n\n  let {\n    movie\n  } = _ref;\n  const {\n    Poster,\n    Title,\n    imdbID,\n    Year,\n    Type\n  } = movie;\n  const setSelectedMovie = useSetRecoilState(selectedMovieState);\n  /* const [favoriteMovies, setFavoriteMovies] = useRecoilState(favoriteMovieState)\n   */\n\n  const selectedMovie = useRecoilValue(selectedMovieState);\n  const [isClicked, setIsClicked] = useState(false);\n  const [, setfavoriteMovies] = useRecoilState(favoriteMovieState);\n  const [movieModal, setMovieModal] = useState(false);\n\n  const setLocalStorage = (key, value) => {\n    store.set(key, value);\n  };\n\n  const getLocalStorage = key => {\n    return store.get(key);\n  };\n\n  const favoriteMovieList = getLocalStorage('favoriteMovies') || [];\n\n  const isFavorite = () => {\n    return favoriteMovieList.find(item => item.imdbID === imdbID);\n  };\n\n  const handleOpen = () => {\n    setMovieModal(true);\n  };\n\n  const handleClose = () => {\n    setMovieModal(false);\n  };\n  /*   const handleFavorite = () => {\n      if (isFavorite()) {\n        setFavoriteMovies((prev) => prev.filter((item) => item.imdbID !== selectedMovie.imdbID))\n      } else {\n        setFavoriteMovies((prev) => [...prev, selectedMovie])\n      }\n      setIsClicked(false)\n    } */\n\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.searchResultWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.searchResult,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Poster,\n        alt: \"Sorry Poster\",\n        \"aria-label\": \"There is no Poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"dl\", {\n        className: styles.searchResultInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n          children: Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"dt\", {\n          children: [Year, \", \", Type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeartIcon, {\n          type: \"button\",\n          className: cx(styles.favoriteState, {\n            [styles.checkFavorite]: isFavorite\n          }),\n          onClick: handleOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), movieModal && /*#__PURE__*/_jsxDEV(ModalPortal, {\n        children: /*#__PURE__*/_jsxDEV(MovieModal, {\n          onClose: handleClose,\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchResult, \"J3Bqoz05vXisiseqplJpZ6itiUQ=\", false, function () {\n  return [useSetRecoilState, useRecoilValue, useRecoilState];\n});\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"names":["useState","useRecoilState","useRecoilValue","useSetRecoilState","favoriteMovieState","selectedMovieState","ModalPortal","MovieModal","store","cx","HeartIcon","styles","SearchResult","movie","Poster","Title","imdbID","Year","Type","setSelectedMovie","selectedMovie","isClicked","setIsClicked","setfavoriteMovies","movieModal","setMovieModal","setLocalStorage","key","value","set","getLocalStorage","get","favoriteMovieList","isFavorite","find","item","handleOpen","handleClose","searchResultWrapper","searchResult","searchResultInfo","favoriteState","checkFavorite"],"sources":["/Users/gyul/git/movie-search-app/src/components/searchResult/index.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport { favoriteMovieState, selectedMovieState } from 'states/movie'\nimport { IMovie } from 'types/movie'\n\nimport ModalPortal from '../modal/modalPortal';\nimport { MovieModal } from '../modal';\n\nimport store from 'storejs'\n\nimport cx from 'classnames'\nimport { HeartIcon, CancelIcon } from 'assets/svgs'\nimport styles from './searchResult.module.scss'\n\ninterface MovieItemProps {\n  movie: IMovie\n}\n\nconst SearchResult = ({ movie }: MovieItemProps) => {\n  const { Poster, Title, imdbID, Year, Type } = movie\n  const setSelectedMovie = useSetRecoilState(selectedMovieState)\n\n  /* const [favoriteMovies, setFavoriteMovies] = useRecoilState(favoriteMovieState)\n   */const selectedMovie = useRecoilValue(selectedMovieState)\n  \n  \n   const [isClicked, setIsClicked] = useState(false)\n\n  const [, setfavoriteMovies] = useRecoilState(favoriteMovieState);\n\n  const [movieModal, setMovieModal] = useState<boolean>(false);\n\n  const setLocalStorage = (key: string, value: any) => {\n    store.set(key, value)\n  }\n\n  const getLocalStorage = (key: string) => {\n    return store.get(key)\n  }\n  const favoriteMovieList = getLocalStorage('favoriteMovies') || [];\n\n  const isFavorite = () => {\n    return favoriteMovieList.find((item: IMovie) => item.imdbID === imdbID);\n  };\n\n  const handleOpen = () => {\n    setMovieModal(true);\n  };\n\n  const handleClose = () => {\n    setMovieModal(false);\n  };\n/*   const handleFavorite = () => {\n    if (isFavorite()) {\n      setFavoriteMovies((prev) => prev.filter((item) => item.imdbID !== selectedMovie.imdbID))\n    } else {\n      setFavoriteMovies((prev) => [...prev, selectedMovie])\n    }\n    setIsClicked(false)\n  } */\n\n  return (\n    <li className={styles.searchResultWrapper}>\n      <div className={styles.searchResult}>\n        <img src={Poster} alt='Sorry Poster' aria-label='There is no Poster' />\n        <dl className={styles.searchResultInfo}>\n          <dt>{Title}</dt>\n          <dt>\n            {Year}, {Type}\n          </dt>\n          <HeartIcon\n            type='button'\n            className={cx(styles.favoriteState, { [styles.checkFavorite]: isFavorite })}\n            onClick={handleOpen}\n          />\n        </dl>\n        {movieModal && (\n        <ModalPortal>\n          <MovieModal onClose={handleClose} movie={movie} />\n        </ModalPortal>\n      )}\n       {/*  <div className={cx(styles.favoriteMenu, { [styles.openMenu]: isClicked })}>\n          {!favoriteMovies.includes(movie) ? (\n            <button type='button' className={styles.addFavoriteToggle} onClick={handleFavorite}>\n              <HeartIcon type='button' className={styles.favoriteSVG} />\n              즐겨찾기 추가\n            </button>\n          ) : (\n            <button\n              type='button'\n              className={cx(styles.addFavoriteToggle, { [styles.checkFavorite]: isFavorite })}\n              onClick={handleFavorite}\n            >\n              <HeartIcon type='button' className={cx(styles.favoriteSVG, styles.checkFavorite)} />\n              즐겨찾기 제거\n            </button>\n          )}\n          <button type='button' onClick={handleClose}>\n            <CancelIcon className={styles.closeSVG} /> 취소\n          </button>\n        </div> */}\n      </div>\n    </li>\n  )\n}\n\nexport default SearchResult\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}